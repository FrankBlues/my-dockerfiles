FROM ubuntu:20.04

CMD ["bash"]

ENV DEBIAN_FRONTEND=noninteractive
ENV DATA_DIR=/data

RUN apt-get update \
    && apt-get install -y --no-install-recommends --no-install-suggests         build-essential         libblas-dev         libbz2-dev         libcairo2-dev         libfftw3-dev         libfreetype6-dev         libgdal-dev         libgeos-dev         libglu1-mesa-dev         libgsl0-dev         libjpeg-dev         liblapack-dev         libncurses5-dev         libnetcdf-dev         libopenjp2-7         libopenjp2-7-dev         libpdal-dev pdal         libpdal-plugin-python         libpng-dev         libpq-dev         libproj-dev         libreadline-dev         libsqlite3-dev         libtiff-dev         libxmu-dev         libzstd-dev         bison         flex         g++         gettext         gdal-bin         language-pack-en-base         libfftw3-bin         make         ncurses-bin         netcdf-bin         proj-bin         proj-data         python3         python3-dateutil         python3-dev         python3-numpy         python3-pil         python3-pip         python3-ply         python3-six         python3-wxgtk4.0         python3-gdal         python3-matplotlib         sqlite3         subversion         unixodbc-dev         zlib1g-dev \
   && apt-get autoremove \
   && apt-get clean \
   && mkdir -p $DATA_DIR # buildkit

RUN mkdir /code
#RUN /bin/sh -c mkdir /code/grass # buildkit
COPY ./code /code/
WORKDIR /code/grass
ENV MYCFLAGS=-O2 -std=gnu99
ENV MYLDFLAGS=-s
ENV LD_LIBRARY_PATH=/usr/local/lib
ENV LDFLAGS=-s
ENV CFLAGS=-O2 -std=gnu99
ENV CXXFLAGS=
ENV NUMTHREADS=2
RUN ./configure     --enable-largefile     --with-cxx     --with-nls     --with-readline     --with-sqlite     --with-bzlib     --with-zstd     --with-cairo --with-cairo-ldflags=-lfontconfig     --with-freetype --with-freetype-includes="/usr/include/freetype2/"     --with-fftw     --with-netcdf     --with-pdal     --with-proj --with-proj-share=/usr/share/proj     --with-geos=/usr/bin/geos-config   --with-opengl-libs=/usr/include/GL \
    && make -j $NUMTHREADS && make install \
    && ldconfig # buildkit
RUN /bin/sh -c if [ ! -e /usr/local/bin/grass ] ; then ln -s /usr/local/bin/grass* /usr/local/bin/grass ; fi # buildkit
RUN /bin/sh -c apt-get autoremove -y
RUN /bin/sh -c apt-get clean -y
ENV SHELL=/bin/bash
RUN /bin/sh -c chmod -R a+rwx $DATA_DIR # buildkit
RUN /bin/sh -c useradd -m -U grass # buildkit
WORKDIR /data
RUN /bin/sh -c rm -rf /code/grass # buildkit
CMD ["/usr/local/bin/grass" "--version"]
