apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: dom-full-1-8-xq
  namespace: default
spec:
  entrypoint: dom-full-1-8-xq
  arguments:
    parameters:
      - name: ceph_path
        value: /mnt/cephfs/rsi-data
      - name: share_path
        value: /mnt/cifs
      - name: exec_code
        value: RSI202012111412
      - name: tenant_id
        value: 1
      - name: input_bucket
        value: rsi-private-beta5
      - name: output_bucket
        value: rsi-private-beta5
      - name: accesskey
        value: HBE4ZPQA3OLNNSMUNWWC
      - name: secretkey
        value: NNdgyDR3LbdpnmXe8APcHlnkTnbFOND2bs9lCmyU
      - name: endpoint
        value: '192.168.0.41:7480'
      - name: inner_endpoint
        value: '192.168.0.41:7480'
      - name: protocol
        value: http
      - name: inner_protocol
        value: http
      - name: store_type
        value: 2
      - name: env
        value: private
      - name: input_path
        value: /mnt/cephfs/rsi-data/YueZiyan/GF2
      - name: output_path
        value: /mnt/cephfs/rsi-data/YueZiyan/test_dom1/
      - name: dem_path
        value: /mnt/cephfs/rsi-data/YueZiyan/DEM
      - name: do_gcpmatch
        value: 'true'
      - name: dom_path
        value: /mnt/cephfs/rsi-data/YueZiyan/DOM
      - name: blk_size
        value: '"512 512"'
      - name: search_range
        value: '"300 300"'
      - name: match_method
        value: '0'
      - name: n_blocks_gcp
        value: '"15 15"'
      - name: band_index
        value: '"0 3"'
      - name: grid_num_x_tie
        value: '15'
      - name: grid_num_y_tie
        value: '15'
      - name: block_size_x_tie
        value: '512'
      - name: block_size_y_tie
        value: '512'
      - name: tie_match_tasks_per_node
        value: '5'
      - name: adjustment_model_bundle
        value: '1'
      - name: is_del_tie_error_pt_bundle
        value: 'true'
      - name: del_tie_pt_thre_bundle
        value: '1000,100,50,10,5'
      - name: is_del_gcp_error_pt_bundle
        value: 'true'
      - name: del_gcp_pt_thre_bundle
        value: '1000,100,50,10,5'
      - name: base_img_weight_bundle
        value: '0.1'
      - name: is_set_gcp_weight_bundle
        value: 'true'
      - name: gcp_weight_bundle
        value: '10.0'
      - name: dodging_std_file
        value: /mnt/cephfs/rsi-data/YueZiyan/DOM/2J_DOM.tif
      - name: ortho_gsdx
        value: 0.000045
      - name: ortho_gsdy
        value: 0.000045
      - name: ortho_gsd_cfg
        value: /mnt/cephfs/rsi-data/YueZiyan/ortho_gsd_config.json
      - name: ortho_wktHCS
        value: >-
          GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS
          84",6378137,298.2572235630016,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0],UNIT["degree",0.0174532925199433],AUTHORITY["EPSG","4326"]]
      - name: is_sharpen
        value: 'false'
      - name: mosaic_file
        value: /mnt/cephfs/rsi-data/YueZiyan/test_dom1/mosaic.tif
      - name: smart_mosaic
        value: 'true'
      - name: gsd_mosaicx
        value: '0.0'
      - name: shapefile_path
        value: '"/mnt/cephfs/rsi/data/Test/mlm/shp25000"'
  onExit: ''
  templates:
    - name: dom-full-1-8-xq
      parallelism: 150
      inputs:
        parameters:
          - name: ceph_path
          - name: share_path
          - name: exec_code
          - name: tenant_id
          - name: input_bucket
          - name: output_bucket
          - name: accesskey
          - name: secretkey
          - name: endpoint
          - name: inner_endpoint
          - name: protocol
          - name: inner_protocol
          - name: store_type
          - name: env
          - name: input_path
          - name: output_path
          - name: dem_path
          - name: do_gcpmatch
          - name: dom_path
          - name: blk_size
          - name: search_range
          - name: match_method
          - name: n_blocks_gcp
          - name: band_index
          - name: grid_num_x_tie
          - name: grid_num_y_tie
          - name: block_size_x_tie
          - name: block_size_y_tie
          - name: tie_match_tasks_per_node
          - name: adjustment_model_bundle
          - name: is_del_tie_error_pt_bundle
          - name: del_tie_pt_thre_bundle
          - name: is_del_gcp_error_pt_bundle
          - name: del_gcp_pt_thre_bundle
          - name: base_img_weight_bundle
          - name: is_set_gcp_weight_bundle
          - name: gcp_weight_bundle
          - name: dodging_std_file
          - name: ortho_gsdx
          - name: ortho_gsdy
          - name: ortho_gsd_cfg
          - name: ortho_wktHCS
          - name: is_sharpen
          - name: mosaic_file
          - name: smart_mosaic
          - name: gsd_mosaicx
          - name: shapefile_path
        artifacts: []
      dag:
        tasks:
          - name: mosaic-u5lb
            template: topo-1634957303162
            key: topo-1634957303162
            arguments:
              parameters:
                - name: operatorCode
                  value: imageMosaic
                - name: execCode
                  value: '{{inputs.parameters.exec_code}}'
                - name: tenantId
                  value: '{{inputs.parameters.tenant_id}}'
                - name: fileList
                  value: >-
                    {{tasks.xq-gcpmatch-rule-str-9hcd.outputs.parameters.file_list_str}}
                - name: outPath
                  value: '{{inputs.parameters.mosaic_file}}'
                - name: createPydFlag
                  value: '0'
            when: >-
              {{inputs.parameters.is_sharpen}}==false &&
              {{inputs.parameters.smart_mosaic}}==false
            dependencies:
              - xq-dehaze-uzwn
              - xq-gcpmatch-rule-str-9hcd
          - name: dom-rule-yvta
            template: topo-1634958890767
            key: topo-1634958890767
            arguments:
              parameters:
                - name: result_dir
                  value: '{{inputs.parameters.output_path}}'
                - name: input_dir
                  value: '{{inputs.parameters.input_path}}'
                - name: output_file
                  value: /tmp/dom_parallel.json
                - name: output_gcp_file
                  value: /tmp/dom_gcp_parallel.json
            dependencies: []
          - name: bundle-img-rpc-srns
            template: topo-1634969693670
            key: topo-1634969693670
            arguments:
              parameters:
                - name: input_image_dir
                  value: '{{inputs.parameters.output_path}}/outbyte'
                - name: input_rpc_dir
                  value: '{{inputs.parameters.output_path}}/xqbundle/'
                - name: output_dir
                  value: '{{inputs.parameters.output_path}}/bundle_result'
            dependencies:
              - xq-bundle-oi0d
              - xq-bundle-4kia
          - name: xq-batch-rule-8235
            template: topo-1634981028628
            key: topo-1634981028628
            arguments:
              parameters:
                - name: result_dir
                  value: '{{inputs.parameters.output_path}}'
                - name: input_dir
                  value: '{{inputs.parameters.output_path}}/bundle_result'
                - name: output_file
                  value: /tmp/image_parallel.json
                - name: suffix
                  value: .tif
                - name: gsdx
                  value: '{{inputs.parameters.ortho_gsdx}}'
                - name: gsdy
                  value: '{{inputs.parameters.ortho_gsdy}}'
                - name: gsd_config
                  value: '{{inputs.parameters.ortho_gsd_cfg}}'
            dependencies:
              - bundle-img-rpc-srns
          - name: xq-gcpmatch-rule-str-9hcd
            template: topo-1634982155141
            key: topo-1634982155141
            arguments:
              parameters:
                - name: result_dir
                  value: '{{inputs.parameters.output_path}}/mosaic'
                - name: input_dir
                  value: '{{inputs.parameters.output_path}}/dehaze'
                - name: output_json
                  value: /tmp/xqks_parallel.json
                - name: output_txt
                  value: /tmp/file_list.txt
                - name: image_type
                  value: all
            when: >-
              {{inputs.parameters.is_sharpen}}==false &&
              {{inputs.parameters.smart_mosaic}}==false
            dependencies:
              - xq-dehaze-uzwn
          - name: xq-bundle-oi0d
            template: topo-1637199926090
            key: topo-1637199926090
            arguments:
              parameters:
                - name: input_files
                  value: '{{inputs.parameters.output_path}}/outbyte'
                  editable: false
                - name: output_dir
                  value: '{{inputs.parameters.output_path}}/xqbundle/'
                  editable: false
                - name: dem_file
                  value: '{{inputs.parameters.dem_path}}'
                  editable: false
                - name: config_file
                  value: '{{inputs.parameters.output_path}}/xqbundle/XQBundle.task'
                  editable: false
                - name: is_del_tie_error_pt
                  value: '{{inputs.parameters.is_del_tie_error_pt_bundle}}'
                  editable: false
                - name: del_tie_pt_thre
                  value: '{{inputs.parameters.del_tie_pt_thre_bundle}}'
                  editable: false
                - name: is_del_gcp_error_pt
                  value: '{{inputs.parameters.is_del_gcp_error_pt_bundle}}'
                  editable: false
                - name: del_gcp_thre
                  value: '{{inputs.parameters.del_gcp_pt_thre_bundle}}'
                  editable: false
                - name: adjustment_model
                  value: '{{inputs.parameters.adjustment_model_bundle}}'
                  editable: false
                - name: base_img_weight
                  value: '{{inputs.parameters.base_img_weight_bundle}}'
                  editable: false
                - name: is_set_gcp_weight
                  value: '{{inputs.parameters.is_set_gcp_weight_bundle}}'
                  editable: false
                - name: gcp_weight
                  value: '{{inputs.parameters.gcp_weight_bundle}}'
                  editable: false
                - name: tie_file
                  value: '{{inputs.parameters.output_path}}/xqtiematch/'
                  editable: false
                - name: gcp_file
                  value: '{{inputs.parameters.output_path}}/gcpmatch/xqgcpmatch/'
                  editable: false
                - name: sensor_type
                  value: '0'
                  editable: false
                - name: error_images
                  value: None
                  editable: false
                - name: ctrl_images
                  value: None
                  editable: false
                - name: image_type
                  value: all
                  editable: false
            when: '{{inputs.parameters.do_gcpmatch}}==true'
            dependencies:
              - xq-match-task-sheet-cmd-run-i7yw
          - name: xq-image-sharpen-8ndu
            template: topo-1639107770105
            key: topo-1639107770105
            arguments:
              parameters:
                - name: input_file
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].dehaze_file'| sed 's/\"//g'`
                - name: output_file
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].sharpen_file'| sed 's/\"//g'`
                - name: config_file
                  value: XQImageSharpenCmd.xml
                - name: sharpen_method
                  value: '1'
                - name: sharpen_weight
                  value: '0.5'
                - name: sharpen_radius
                  value: '3'
                - name: sharpen_threthold
                  value: '0'
                - name: create_pyd
                  value: 'false'
              artifacts:
                - name: items
                  from: '{{tasks.xq-batch-rule-8235.outputs.artifacts.items}}'
            when: '{{inputs.parameters.is_sharpen}}==true'
            dependencies:
              - xq-dehaze-uzwn
            withSequence:
              count: '{{tasks.xq-batch-rule-8235.outputs.parameters.count}}'
            continueOn:
              error: true
          - name: xq-gcpmatch-rule-str-3swe
            template: topo-1639117088824
            key: topo-1639117088824
            arguments:
              parameters:
                - name: result_dir
                  value: '{{inputs.parameters.output_path}}/mosaic'
                - name: input_dir
                  value: '{{inputs.parameters.output_path}}/sharpen'
                - name: output_json
                  value: /tmp/xqks_parallel.json
                - name: output_txt
                  value: /tmp/file_list.txt
                - name: image_type
                  value: all
            when: >-
              {{inputs.parameters.is_sharpen}}==true &&
              {{inputs.parameters.smart_mosaic}}==false
            dependencies:
              - xq-dehaze-uzwn
              - xq-image-sharpen-8ndu
          - name: mosaic-b3jl
            template: topo-1639117119409
            key: topo-1639117119409
            arguments:
              parameters:
                - name: operatorCode
                  value: imageMosaic
                - name: execCode
                  value: '{{inputs.parameters.exec_code}}'
                - name: tenantId
                  value: '{{inputs.parameters.tenant_id}}'
                - name: fileList
                  value: >-
                    {{tasks.xq-gcpmatch-rule-str-3swe.outputs.parameters.file_list_str}}
                - name: outPath
                  value: '{{inputs.parameters.mosaic_file}}'
                - name: createPydFlag
                  value: '0'
            when: >-
              {{inputs.parameters.is_sharpen}}==true &&
              {{inputs.parameters.smart_mosaic}}==false
            dependencies:
              - xq-dehaze-uzwn
              - xq-gcpmatch-rule-str-3swe
          - name: xq-match-task-sheet-prepare-f1st
            template: topo-1639562597740
            key: topo-1639562597740
            arguments:
              parameters:
                - name: input_files
                  value: '{{inputs.parameters.output_path}}/outbyte'
                - name: output_dir
                  value: '{{inputs.parameters.output_path}}/xqtiematch'
                - name: dem_file
                  value: '{{inputs.parameters.dem_path}}'
                - name: config_file
                  value: >-
                    {{inputs.parameters.output_path}}/xqtiematch/XQMatchTaskSheet.xml
                - name: block_size_x
                  value: '{{inputs.parameters.block_size_x_tie}}'
                - name: block_size_y
                  value: '{{inputs.parameters.block_size_y_tie}}'
                - name: grid_num_x
                  value: '{{inputs.parameters.grid_num_x_tie}}'
                - name: grid_num_y
                  value: '{{inputs.parameters.grid_num_y_tie}}'
                - name: single_model_match
                  value: 'false'
                - name: grid_filter_size
                  value: '512'
                - name: image_type
                  value: all
                - name: ul_lat
                  value: None
                - name: ul_long
                  value: None
                - name: ur_lat
                  value: None
                - name: ur_long
                  value: None
                - name: lr_lat
                  value: None
                - name: lr_long
                  value: None
                - name: ll_lat
                  value: None
                - name: ll_long
                  value: None
                - name: tasks_per_node
                  value: '{{inputs.parameters.tie_match_tasks_per_node}}'
            dependencies:
              - xq-gcp-match-3rxp
          - name: xq-match-task-sheet-cmd-run-i7yw
            template: topo-1639562603172
            key: topo-1639562603172
            arguments:
              parameters:
                - name: config_file
                  value: >-
                    {{inputs.parameters.output_path}}/xqtiematch/XQMatchTaskSheet.xml
                - name: from_model
                  value: '{{item}}'
                - name: n_models
                  value: '1'
                - name: max_models
                  value: >-
                    {{tasks.xq-match-task-sheet-prepare-f1st.outputs.parameters.n_model_txt}}
                - name: tasks_per_node
                  value: '{{inputs.parameters.tie_match_tasks_per_node}}'
            dependencies:
              - xq-match-task-sheet-prepare-f1st
            withSequence:
              count: >-
                {{tasks.xq-match-task-sheet-prepare-f1st.outputs.parameters.batches}}
          - name: xq-fusion-3q2u
            template: topo-1639985413560
            key: topo-1639985413560
            arguments:
              parameters:
                - name: pan_file
                  value: >-
                    `cat /tmp/dom_parallel.json | jq '.[{{item}}].pan_file' |
                    sed 's/"//g'`
                - name: mss_file
                  value: >-
                    `cat /tmp/dom_parallel.json | jq '.[{{item}}].mss_file'|
                    sed 's/\"//g'`
                - name: config_file
                  value: XQFusionCmd.xml
                - name: output_file
                  value: >-
                    `cat /tmp/dom_parallel.json | jq
                    '.[{{item}}].fusion_file'| sed 's/\"//g'`
                - name: fusion_type
                  value: '4'
                - name: green_enhance
                  value: 'false'
                - name: sharpen
                  value: 'false'
                - name: create_pyd
                  value: 'false'
                - name: resampling_kernel
                  value: '1'
                - name: green_enhance_coef
                  value: '0.1'
                - name: only_rgb
                  value: 'false'
                - name: adjust_band
                  value: 'false'
              artifacts:
                - name: items
                  from: '{{tasks.dom-rule-yvta.outputs.artifacts.items}}'
            dependencies:
              - dom-rule-yvta
            withSequence:
              count: '{{tasks.dom-rule-yvta.outputs.parameters.count}}'
          - name: xq-image-outbyte-6f6m
            template: topo-1639988155975
            key: topo-1639988155975
            arguments:
              parameters:
                - name: input_file
                  value: >-
                    `cat /tmp/dom_parallel.json | jq
                    '.[{{item}}].fusion_file'| sed 's/\"//g'`
                - name: output_file
                  value: >-
                    `cat /tmp/dom_parallel.json | jq
                    '.[{{item}}].outbyte_file'| sed 's/\"//g'`
                - name: config_file
                  value: XQImageOutByteCmd.xml
                - name: min_cut_coef
                  value: '0.25'
                - name: max_cut_coef
                  value: '0.25'
                - name: create_pyd
                  value: 'false'
                - name: green_enhance
                  value: 'false'
                - name: green_enhance_coef
                  value: '0.1'
                - name: only_rgb
                  value: 'true'
                - name: adjust_band
                  value: 'true'
                - name: exposure_suppress
                  value: 'false'
                - name: adaptive_stretch
                  value: 'false'
                - name: tasks
                  value: '4'
              artifacts:
                - name: items
                  from: '{{tasks.dom-rule-yvta.outputs.artifacts.items}}'
            dependencies:
              - xq-fusion-3q2u
            withSequence:
              count: '{{tasks.dom-rule-yvta.outputs.parameters.count}}'
          - name: xq-gcpmatch-rule-5o5y
            template: topo-1639989997871
            key: topo-1639989997871
            arguments:
              parameters:
                - name: result_dir
                  value: '{{inputs.parameters.output_path}}/gcpmatch'
                - name: input_dir
                  value: '{{inputs.parameters.output_path}}/outbyte'
                - name: output_file
                  value: /tmp/xqks_parallel.json
                - name: image_type
                  value: all
            when: '{{inputs.parameters.do_gcpmatch}}==true'
            dependencies:
              - xq-image-outbyte-6f6m
          - name: xq-gcp-match-3rxp
            template: topo-1639990256135
            key: topo-1639990256135
            arguments:
              parameters:
                - name: config_file
                  value: GcpMatch.task
                - name: tag
                  value: '" XQIMAGE MATCH V1"'
                - name: block_size
                  value: '{{inputs.parameters.blk_size}}'
                - name: n_blocks
                  value: '{{inputs.parameters.n_blocks_gcp}}'
                - name: search_range
                  value: '{{inputs.parameters.search_range}}'
                - name: match_method
                  value: '{{inputs.parameters.match_method}}'
                - name: band_index
                  value: '{{inputs.parameters.band_index}}'
                - name: confidence
                  value: '0.00'
                - name: generate_imp
                  value: 'false'
                - name: wallis_filter
                  value: 'true'
                - name: imp_warp_mode
                  value: '4'
                - name: input_file
                  value: >-
                    `cat /tmp/intersected_gcp.json | jq
                    '.[{{item}}].origin_file'| sed 's/\"//g'`
                - name: output_file
                  value: >-
                    `cat /tmp/intersected_gcp.json | jq
                    '.[{{item}}].gcp_output_file'| sed 's/\"//g'`
                - name: dem_path
                  value: '{{inputs.parameters.dem_path}}'
                - name: reference_images
                  value: >-
                    `cat /tmp/intersected_gcp.json | jq
                    '.[{{item}}].ref_file'| sed 's/\"//g'`
                - name: is_gf7
                  value: 'false'
              artifacts:
                - name: items
                  from: >-
                    {{tasks.parse-intersected-gcp-rz99.outputs.artifacts.items}}
            when: '{{inputs.parameters.do_gcpmatch}}==true'
            dependencies:
              - parse-intersected-gcp-rz99
            withSequence:
              count: '{{tasks.parse-intersected-gcp-rz99.outputs.parameters.count}}'
            continueOn:
              error: true
          - name: xq-ortho-a5wn
            template: topo-1640050229747
            key: topo-1640050229747
            arguments:
              parameters:
                - name: input_file
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].input_file'| sed 's/\"//g'`
                - name: output_file
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].ortho_file'| sed 's/\"//g'`
                - name: config_file
                  value: XQOrthoCmd.xml
                - name: dem_file
                  value: '{{inputs.parameters.dem_path}}'
                - name: gsd_x
                  value: >-
                    `cat /tmp/image_parallel.json | jq '.[{{item}}].gsdx'| sed
                    's/\"//g'`
                - name: gsd_y
                  value: >-
                    `cat /tmp/image_parallel.json | jq '.[{{item}}].gsdy'| sed
                    's/\"//g'`
                - name: wkt_hcs
                  value: '{{inputs.parameters.ortho_wktHCS}}'
                - name: resampling_kernel
                  value: BiLinear
                - name: output_8bits
                  value: 'false'
                - name: clip_by_dem
                  value: 'false'
                - name: create_pyd
                  value: 'false'
                - name: tasks
                  value: '4'
              artifacts:
                - name: items
                  from: '{{tasks.xq-batch-rule-8235.outputs.artifacts.items}}'
            dependencies:
              - xq-batch-rule-8235
            withSequence:
              count: '{{tasks.xq-batch-rule-8235.outputs.parameters.count}}'
          - name: xq-dodging-cdqq
            template: topo-1640051497180
            key: topo-1640051497180
            arguments:
              parameters:
                - name: input_file
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].ortho_file'| sed 's/\"//g'`
                - name: output_file
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].dodging_file'| sed 's/\"//g'`
                - name: config_file
                  value: XQDodgingCmd.task
                - name: processing_mode
                  value: '0'
                - name: is_single_color
                  value: '0'
                - name: single_color_coef
                  value: '0.3'
                - name: processing_method
                  value: '4'
                - name: block_size
                  value: '512'
                - name: std_file
                  value: '{{inputs.parameters.dodging_std_file}}'
                - name: use_cloud_mask
                  value: '0'
                - name: cloud_mask_file
                  value: ''
                - name: create_pyd
                  value: '1'
                - name: diff_limit
                  value: '0'
                - name: diff_limit_coef
                  value: '0'
                - name: var_diff_limit_coef
                  value: '0.8'
                - name: stretch
                  value: '0'
                - name: min_coef
                  value: '0.25'
                - name: max_coef
                  value: '0.25'
                - name: expose_control
                  value: '0'
                - name: adjust_brightness
                  value: '0'
                - name: brightness_coef
                  value: '0.01'
                - name: adjust_contrast
                  value: '0'
                - name: contrast_coef
                  value: '0.05'
                - name: task
                  value: '4'
              artifacts:
                - name: items
                  from: '{{tasks.xq-batch-rule-8235.outputs.artifacts.items}}'
            dependencies:
              - xq-ortho-a5wn
            withSequence:
              count: '{{tasks.xq-batch-rule-8235.outputs.parameters.count}}'
          - name: xq-dehaze-uzwn
            template: topo-1640051672030
            key: topo-1640051672030
            arguments:
              parameters:
                - name: input_file
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].dodging_file'| sed 's/\"//g'`
                - name: output_file
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].dehaze_file'| sed 's/\"//g'`
                - name: config_file
                  value: XQDeHazeCmd.xml
                - name: self_adjust
                  value: 'true'
                - name: n_block_size
                  value: '10'
                - name: n_guide_block_size
                  value: '40'
                - name: n_max_atom
                  value: '240'
                - name: d_epsilon
                  value: '0.001'
                - name: d_sky
                  value: '25'
                - name: d_omega
                  value: '0.95'
                - name: dehaze_method
                  value: '0'
                - name: b_clahe
                  value: 'false'
                - name: d_cut_limit
                  value: '1'
                - name: all_band_clahe
                  value: '0'
                - name: expose_control
                  value: '0'
              artifacts:
                - name: items
                  from: '{{tasks.xq-batch-rule-8235.outputs.artifacts.items}}'
            dependencies:
              - xq-dodging-cdqq
            withSequence:
              count: '{{tasks.xq-batch-rule-8235.outputs.parameters.count}}'
          - name: xq-intersect-obj-a9f3
            template: topo-1640080697712
            key: topo-1640080697712
            arguments:
              parameters:
                - name: input_files
                  value: '{{inputs.parameters.output_path}}/outbyte'
                - name: output_file
                  value: '{{inputs.parameters.output_path}}/tie_coordinate.txt'
                - name: dem_file
                  value: '{{inputs.parameters.dem_path}}'
                - name: config_file
                  value: XQIntersectObjCmd.task
                - name: tie_file
                  value: >-
                    {{inputs.parameters.output_path}}/xqtiematch/merge/bundle.tie
                - name: sensor_type
                  value: '0'
                - name: image_type
                  value: all
            dependencies:
              - xq-bundle-oi0d
              - xq-bundle-4kia
          - name: xq-batch-rule-5car
            template: topo-1641370361970
            key: topo-1641370361970
            arguments:
              parameters:
                - name: result_dir
                  value: '{{inputs.parameters.output_path}}/mosaicx'
                - name: input_dir
                  value: '{{inputs.parameters.output_path}}/dehaze'
                - name: output_file
                  value: /tmp/image_parallel.json
                - name: suffix
                  value: .tif
            when: >-
              {{inputs.parameters.is_sharpen}}==false &&
              {{inputs.parameters.smart_mosaic}}==true &&
              {{inputs.parameters.shapefile_path}}!=NULL
            dependencies:
              - xq-dehaze-uzwn
          - name: xq-intersect-9jaw
            template: topo-1641370379282
            key: topo-1641370379282
            arguments:
              parameters:
                - name: input_file
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].input_file'| sed 's/\"//g'`
                - name: output_file
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].intersect_file'| sed 's/\"//g'`
                - name: input_shp_dir
                  value: '{{inputs.parameters.shapefile_path}}'
                - name: config_file
                  value: XQIntersectCmd.xml
                - name: exact_intersection
                  value: 'true'
              artifacts:
                - name: items
                  from: '{{tasks.xq-batch-rule-5car.outputs.artifacts.items}}'
            when: >-
              {{inputs.parameters.is_sharpen}}==false &&
              {{inputs.parameters.smart_mosaic}}==true &&
              {{inputs.parameters.shapefile_path}}!=NULL
            dependencies:
              - xq-dehaze-uzwn
              - xq-batch-rule-5car
            withSequence:
              count: '{{tasks.xq-batch-rule-5car.outputs.parameters.count}}'
            continueOn:
              error: true
          - name: parse-intersected-e9iu
            template: topo-1641370385159
            key: topo-1641370385159
            arguments:
              parameters:
                - name: input_txt_dir
                  value: '{{inputs.parameters.output_path}}/mosaicx/intersect/'
                - name: output_file
                  value: /tmp/intersected_shps.json
                - name: count
                  value: /tmp/count
                - name: output_dir
                  value: '{{inputs.parameters.output_path}}/mosaicx'
            when: >-
              {{inputs.parameters.is_sharpen}}==false &&
              {{inputs.parameters.smart_mosaic}}==true &&
              {{inputs.parameters.shapefile_path}}!=NULL
            dependencies:
              - xq-dehaze-uzwn
              - xq-intersect-9jaw
            continueOn:
              error: true
          - name: xq-batch-rule-x1b3
            template: topo-1641370734794
            key: topo-1641370734794
            arguments:
              parameters:
                - name: result_dir
                  value: '{{inputs.parameters.output_path}}/mosaicx'
                - name: input_dir
                  value: '{{inputs.parameters.output_path}}/sharpen'
                - name: output_file
                  value: /tmp/image_parallel.json
                - name: suffix
                  value: .tif
            when: >-
              {{inputs.parameters.is_sharpen}}==true &&
              {{inputs.parameters.smart_mosaic}}==true &&
              {{inputs.parameters.shapefile_path}}!=NULL
            dependencies:
              - xq-dehaze-uzwn
              - xq-image-sharpen-8ndu
          - name: xq-intersect-4nl9
            template: topo-1641370750425
            key: topo-1641370750425
            arguments:
              parameters:
                - name: input_file
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].input_file'| sed 's/\"//g'`
                - name: output_file
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].intersect_file'| sed 's/\"//g'`
                - name: input_shp_dir
                  value: '{{inputs.parameters.shapefile_path}}'
                - name: config_file
                  value: XQIntersectCmd.xml
                - name: exact_intersection
                  value: 'true'
              artifacts:
                - name: items
                  from: '{{tasks.xq-batch-rule-x1b3.outputs.artifacts.items}}'
            when: >-
              {{inputs.parameters.is_sharpen}}==true &&
              {{inputs.parameters.smart_mosaic}}==true &&
              {{inputs.parameters.shapefile_path}}!=NULL
            dependencies:
              - xq-dehaze-uzwn
              - xq-batch-rule-x1b3
            withSequence:
              count: '{{tasks.xq-batch-rule-x1b3.outputs.parameters.count}}'
            continueOn:
              error: true
          - name: parse-intersected-yj80
            template: topo-1641370755999
            key: topo-1641370755999
            arguments:
              parameters:
                - name: input_txt_dir
                  value: '{{inputs.parameters.output_path}}/mosaicx/intersect/'
                - name: output_file
                  value: /tmp/intersected_shps.json
                - name: count
                  value: /tmp/count
                - name: output_dir
                  value: '{{inputs.parameters.output_path}}/mosaicx'
            when: >-
              {{inputs.parameters.is_sharpen}}==true &&
              {{inputs.parameters.smart_mosaic}}==true &&
              {{inputs.parameters.shapefile_path}}!=NULL
            dependencies:
              - xq-dehaze-uzwn
              - xq-intersect-4nl9
          - name: xq-bundle-4kia
            template: topo-1641460540030
            key: topo-1641460540030
            arguments:
              parameters:
                - name: input_files
                  value: '{{inputs.parameters.output_path}}/outbyte'
                - name: output_dir
                  value: '{{inputs.parameters.output_path}}/xqbundle/'
                - name: dem_file
                  value: '{{inputs.parameters.dem_path}}'
                - name: config_file
                  value: '{{inputs.parameters.output_path}}/xqbundle/XQBundle.task'
                - name: is_del_tie_error_pt
                  value: '{{inputs.parameters.is_del_tie_error_pt_bundle}}'
                - name: del_tie_pt_thre
                  value: '{{inputs.parameters.del_tie_pt_thre_bundle}}'
                - name: is_del_gcp_error_pt
                  value: '{{inputs.parameters.is_del_gcp_error_pt_bundle}}'
                - name: del_gcp_thre
                  value: '{{inputs.parameters.del_gcp_pt_thre_bundle}}'
                - name: adjustment_model
                  value: '{{inputs.parameters.adjustment_model_bundle}}'
                - name: base_img_weight
                  value: '{{inputs.parameters.base_img_weight_bundle}}'
                - name: is_set_gcp_weight
                  value: '{{inputs.parameters.is_set_gcp_weight_bundle}}'
                - name: gcp_weight
                  value: '{{inputs.parameters.gcp_weight_bundle}}'
                - name: tie_file
                  value: '{{inputs.parameters.output_path}}/xqtiematch/'
                - name: gcp_file
                  value: 'NULL'
                - name: sensor_type
                  value: '0'
                - name: error_images
                  value: None
                - name: ctrl_images
                  value: None
                - name: image_type
                  value: all
            when: '{{inputs.parameters.do_gcpmatch}}==false'
            dependencies:
              - xq-match-task-sheet-cmd-run-i7yw
          - name: xq-smart-mosaic-vf2a
            template: topo-1645077076753
            key: topo-1645077076753
            arguments:
              parameters:
                - name: inputDir
                  value: '{{inputs.parameters.output_path}}/sharpen'
                - name: outputFile
                  value: >-
                    `cat /tmp/intersected_shps.json | jq
                    '.[{{item}}].output_file'| sed 's/\"//g'`
                - name: configFile
                  value: SmartMosaic.task
                - name: mosaicListFile
                  value: >-
                    `cat /tmp/intersected_shps.json | jq
                    '.[{{item}}].image_list_file'| sed 's/\"//g'`
                - name: extentShpFile
                  value: >-
                    `cat /tmp/intersected_shps.json | jq
                    '.[{{item}}].shp_file'| sed 's/\"//g'`
                - name: gsd
                  value: '{{inputs.parameters.gsd_mosaicx}}'
                - name: createPyd
                  value: '0'
                - name: findLine
                  value: '1'
                - name: extentIsEnvelope
                  value: '1'
                - name: resampleMethod
                  value: '1'
                - name: genLineOnly
                  value: '0'
                - name: smallOverlap
                  value: '0'
                - name: tenantId
                  value: '{{inputs.parameters.tenant_id}}'
                - name: execCode
                  value: '{{inputs.parameters.exec_code}}'
                - name: operatorCode
                  value: intellectImageMosaic
              artifacts:
                - name: items
                  from: '{{tasks.parse-intersected-yj80.outputs.artifacts.items}}'
            when: >-
              {{inputs.parameters.is_sharpen}}==true &&
              {{inputs.parameters.smart_mosaic}}==true &&
              {{inputs.parameters.shapefile_path}}!=NULL
            dependencies:
              - xq-dehaze-uzwn
              - parse-intersected-yj80
            withSequence:
              count: '{{tasks.parse-intersected-yj80.outputs.parameters.count}}'
            continueOn:
              error: true
          - name: xq-smart-mosaic-po51
            template: topo-1645078224519
            key: topo-1645078224519
            arguments:
              parameters:
                - name: inputDir
                  value: '{{inputs.parameters.output_path}}/sharpen'
                - name: outputFile
                  value: '{{inputs.parameters.mosaic_file}}'
                - name: configFile
                  value: SmartMosaic.task
                - name: mosaicListFile
                  value: file_list.txt
                - name: extentShpFile
                  value: 'NULL'
                - name: gsd
                  value: '{{inputs.parameters.gsd_mosaicx}}'
                - name: createPyd
                  value: '0'
                - name: findLine
                  value: '1'
                - name: extentIsEnvelope
                  value: '1'
                - name: resampleMethod
                  value: '1'
                - name: genLineOnly
                  value: '0'
                - name: smallOverlap
                  value: '0'
                - name: tenantId
                  value: '{{inputs.parameters.tenant_id}}'
                - name: execCode
                  value: '{{inputs.parameters.exec_code}}'
                - name: operatorCode
                  value: intellectImageMosaic
            when: >-
              {{inputs.parameters.is_sharpen}}==true &&
              {{inputs.parameters.smart_mosaic}}==true &&
              {{inputs.parameters.shapefile_path}}==NULL
            dependencies:
              - xq-dehaze-uzwn
              - xq-image-sharpen-8ndu
          - name: xq-smart-mosaic-6vqt
            template: topo-1645078846350
            key: topo-1645078846350
            arguments:
              parameters:
                - name: inputDir
                  value: '{{inputs.parameters.output_path}}/dehaze'
                - name: outputFile
                  value: '{{inputs.parameters.mosaic_file}}'
                - name: configFile
                  value: SmartMosaic.task
                - name: mosaicListFile
                  value: file_list.txt
                - name: extentShpFile
                  value: 'NULL'
                - name: gsd
                  value: '{{inputs.parameters.gsd_mosaicx}}'
                - name: createPyd
                  value: '0'
                - name: findLine
                  value: '1'
                - name: extentIsEnvelope
                  value: '1'
                - name: resampleMethod
                  value: '1'
                - name: genLineOnly
                  value: '0'
                - name: smallOverlap
                  value: '0'
                - name: tenantId
                  value: '{{inputs.parameters.tenant_id}}'
                - name: execCode
                  value: '{{inputs.parameters.exec_code}}'
                - name: operatorCode
                  value: intellectImageMosaic
            when: >-
              {{inputs.parameters.is_sharpen}}==false &&
              {{inputs.parameters.smart_mosaic}}==true &&
              {{inputs.parameters.shapefile_path}}==NULL
            dependencies:
              - xq-dehaze-uzwn
          - name: xq-smart-mosaic-sqhy
            template: topo-1645079069831
            key: topo-1645079069831
            arguments:
              parameters:
                - name: inputDir
                  value: '{{inputs.parameters.output_path}}/dehaze'
                - name: outputFile
                  value: >-
                    `cat /tmp/intersected_shps.json | jq
                    '.[{{item}}].output_file'| sed 's/\"//g'`
                - name: configFile
                  value: SmartMosaic.task
                - name: mosaicListFile
                  value: >-
                    `cat /tmp/intersected_shps.json | jq
                    '.[{{item}}].image_list_file'| sed 's/\"//g'`
                - name: extentShpFile
                  value: >-
                    `cat /tmp/intersected_shps.json | jq
                    '.[{{item}}].shp_file'| sed 's/\"//g'`
                - name: gsd
                  value: '{{inputs.parameters.gsd_mosaicx}}'
                - name: createPyd
                  value: '0'
                - name: findLine
                  value: '1'
                - name: extentIsEnvelope
                  value: '1'
                - name: resampleMethod
                  value: '1'
                - name: genLineOnly
                  value: '0'
                - name: smallOverlap
                  value: '0'
                - name: tenantId
                  value: '{{inputs.parameters.tenant_id}}'
                - name: execCode
                  value: '{{inputs.parameters.exec_code}}'
                - name: operatorCode
                  value: intellectImageMosaic
              artifacts:
                - name: items
                  from: '{{tasks.parse-intersected-e9iu.outputs.artifacts.items}}'
            when: >-
              {{inputs.parameters.is_sharpen}}==false &&
              {{inputs.parameters.smart_mosaic}}==true &&
              {{inputs.parameters.shapefile_path}}!=NULL
            dependencies:
              - xq-dehaze-uzwn
              - parse-intersected-e9iu
            withSequence:
              count: '{{tasks.parse-intersected-e9iu.outputs.parameters.count}}'
            continueOn:
              error: true
          - name: xq-intersect-copy1-pxak
            template: topo-1649828538836
            key: topo-1649828538836
            arguments:
              parameters:
                - name: input_file
                  value: >-
                    `cat /tmp/xqks_parallel.json | jq
                    '.[{{item}}].input_file'| sed 's/\"//g'`
                - name: output_file
                  value: >-
                    `cat /tmp/xqks_parallel.json | jq
                    '.[{{item}}].intersect_txt'| sed 's/\"//g'`
                - name: input_shp_dir
                  value: '{{inputs.parameters.dom_path}}'
                - name: config_file
                  value: XQIntersectCmd.xml
                - name: exact_intersection
                  value: 'true'
                - name: is_image_dir
                  value: 'true'
              artifacts:
                - name: items
                  from: '{{tasks.xq-gcpmatch-rule-5o5y.outputs.artifacts.items}}'
            when: '{{inputs.parameters.do_gcpmatch}}==true'
            dependencies:
              - xq-gcpmatch-rule-5o5y
            withSequence:
              count: '{{tasks.xq-gcpmatch-rule-5o5y.outputs.parameters.count}}'
            continueOn:
              error: true
          - name: parse-intersected-gcp-rz99
            template: topo-1649828544087
            key: topo-1649828544087
            arguments:
              parameters:
                - name: input_dir
                  value: '{{inputs.parameters.output_path}}/outbyte'
                - name: output_file
                  value: /tmp/intersected_gcp.json
                - name: image_type
                  value: all
                - name: output_dir
                  value: '{{inputs.parameters.output_path}}/gcpmatch'
            when: '{{inputs.parameters.do_gcpmatch}}==true'
            dependencies:
              - xq-intersect-copy1-pxak
      outputs:
        parameters: []
        artifacts: []
    - name: delay
      inputs:
        parameters:
          - name: time
      suspend:
        duration: '{{inputs.parameters.time}}'
    - name: topo-1634957303162
      inputs:
        parameters:
          - name: operatorCode
          - name: execCode
          - name: tenantId
          - name: fileList
          - name: outPath
          - name: createPydFlag
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 24Gi
            cpu: 12
          requests:
            memory: 24Gi
            cpu: 12
        args: 
          - >-
            java -jar /opt/potato-algo-adapter.jar
            --operatorCode={{inputs.parameters.operatorCode}}
            --execCode={{inputs.parameters.execCode}}
            --tenantId={{inputs.parameters.tenantId}}
            --fileList={{inputs.parameters.fileList}}
            --outPath={{inputs.parameters.outPath}}
            --createPydFlag={{inputs.parameters.createPydFlag}}
            --spring.config.location={{workflow.parameters.ceph_path}}/config/application-{{workflow.parameters.env}}.yml
            --s3.protocol={{workflow.parameters.protocol}}
            --s3.ak={{workflow.parameters.accesskey}}
            --s3.sk={{workflow.parameters.secretkey}}
            --s3.bucket={{workflow.parameters.output_bucket}}
            --s3.endpoint={{workflow.parameters.endpoint}}
            --s3.lanEndpoint={{workflow.parameters.inner_endpoint}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1634958890767
      inputs:
        parameters:
          - name: result_dir
          - name: input_dir
          - name: output_file
          - name: output_gcp_file
      outputs:
        artifacts:
          - name: items
            path: /tmp/dom_parallel.json
        parameters:
          - name: count
            valueFrom:
              path: /tmp/count
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-parallel:v0304'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python3 /opt/rsi/process/dom_rule_multi_source.py
            --result_dir={{inputs.parameters.result_dir}}
            --input_dir={{inputs.parameters.input_dir}}
            --output_file={{inputs.parameters.output_file}}
            --output_gcp_file={{inputs.parameters.output_gcp_file}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1634969693670
      inputs:
        parameters:
          - name: input_image_dir
          - name: input_rpc_dir
          - name: output_dir
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-parallel:v0304'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python3 /opt/rsi/process/bundle_img_rpc_new.py
            --input_image_dir={{inputs.parameters.input_image_dir}}
            --input_rpc_dir={{inputs.parameters.input_rpc_dir}}
            --output_dir={{inputs.parameters.output_dir}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1634981028628
      inputs:
        parameters:
          - name: result_dir
          - name: input_dir
          - name: output_file
          - name: suffix
          - name: gsdx
          - name: gsdy
          - name: gsd_config
      outputs:
        artifacts:
          - name: items
            path: /tmp/image_parallel.json
        parameters:
          - name: count
            valueFrom:
              path: /tmp/count
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-parallel:v0304'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python3 /opt/rsi/process/xq_batch_rule_multi_source_cfg.py
            --result_dir={{inputs.parameters.result_dir}}
            --input_dir={{inputs.parameters.input_dir}}
            --output_file={{inputs.parameters.output_file}}
            --suffix={{inputs.parameters.suffix}}
            --gsdx={{inputs.parameters.gsdx}} --gsdy={{inputs.parameters.gsdy}}
            --gsd_config={{inputs.parameters.gsd_config}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1634982155141
      inputs:
        parameters:
          - name: result_dir
          - name: input_dir
          - name: output_json
          - name: output_txt
          - name: image_type
      outputs:
        parameters:
          - name: result
            valueFrom:
              path: /tmp/xqks_parallel.json
          - name: file_list_str
            valueFrom:
              path: /tmp/file_list.txt
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-parallel:v0304'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python /opt/rsi/process/xq_gcpmatch_rule_str.py
            --result_dir={{inputs.parameters.result_dir}}
            --input_dir={{inputs.parameters.input_dir}}
            --output_json={{inputs.parameters.output_json}}
            --output_txt={{inputs.parameters.output_txt}}
            --image_type={{inputs.parameters.image_type}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1637199926090
      inputs:
        parameters:
          - name: input_files
          - name: output_dir
          - name: dem_file
          - name: config_file
          - name: is_del_tie_error_pt
          - name: del_tie_pt_thre
          - name: is_del_gcp_error_pt
          - name: del_gcp_thre
          - name: adjustment_model
          - name: base_img_weight
          - name: is_set_gcp_weight
          - name: gcp_weight
          - name: tie_file
          - name: gcp_file
          - name: sensor_type
          - name: error_images
          - name: ctrl_images
          - name: image_type
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: '8'
          requests:
            memory: 8Gi
            cpu: '8'
        args: 
          - >-
            cd /opt/linux64; python3 /opt/rsi/xq_bundle_cmd.py
            --input_files={{inputs.parameters.input_files}}
            --output_dir={{inputs.parameters.output_dir}}
            --dem_file={{inputs.parameters.dem_file}}
            --config_file={{inputs.parameters.config_file}}
            --is_del_tie_error_pt={{inputs.parameters.is_del_tie_error_pt}}
            --del_tie_pt_thre={{inputs.parameters.del_tie_pt_thre}}
            --is_del_gcp_error_pt={{inputs.parameters.is_del_gcp_error_pt}}
            --del_gcp_thre={{inputs.parameters.del_gcp_thre}}
            --adjustment_model={{inputs.parameters.adjustment_model}}
            --base_img_weight={{inputs.parameters.base_img_weight}}
            --is_set_gcp_weight={{inputs.parameters.is_set_gcp_weight}}
            --gcp_weight={{inputs.parameters.gcp_weight}}
            --tie_file={{inputs.parameters.tie_file}}
            --gcp_file={{inputs.parameters.gcp_file}}
            --sensor_type={{inputs.parameters.sensor_type}}
            --error_images={{inputs.parameters.error_images}}
            --ctrl_images={{inputs.parameters.ctrl_images}}
            --image_type={{inputs.parameters.image_type}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1639107770105
      inputs:
        parameters:
          - name: input_file
          - name: output_file
          - name: config_file
          - name: sharpen_method
          - name: sharpen_weight
          - name: sharpen_radius
          - name: sharpen_threthold
          - name: create_pyd
        artifacts:
          - name: items
            path: /tmp/image_parallel.json
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 16Gi
            cpu: 8
          requests:
            memory: 16Gi
            cpu: 8
        args: 
          - >-
            python3 /opt/rsi/xq_image_sharpen_cmd.py
            --input_file={{inputs.parameters.input_file}}
            --output_file={{inputs.parameters.output_file}}
            --config_file={{inputs.parameters.config_file}}
            --sharpen_method={{inputs.parameters.sharpen_method}}
            --sharpen_weight={{inputs.parameters.sharpen_weight}}
            --sharpen_radius={{inputs.parameters.sharpen_radius}}
            --sharpen_threthold={{inputs.parameters.sharpen_threthold}}
            --create_pyd={{inputs.parameters.create_pyd}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1639117088824
      inputs:
        parameters:
          - name: result_dir
          - name: input_dir
          - name: output_json
          - name: output_txt
          - name: image_type
      outputs:
        parameters:
          - name: result
            valueFrom:
              path: /tmp/xqks_parallel.json
          - name: file_list_str
            valueFrom:
              path: /tmp/file_list.txt
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-parallel:v0304'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python /opt/rsi/process/xq_gcpmatch_rule_str.py
            --result_dir={{inputs.parameters.result_dir}}
            --input_dir={{inputs.parameters.input_dir}}
            --output_json={{inputs.parameters.output_json}}
            --output_txt={{inputs.parameters.output_txt}}
            --image_type={{inputs.parameters.image_type}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1639117119409
      inputs:
        parameters:
          - name: operatorCode
          - name: execCode
          - name: tenantId
          - name: fileList
          - name: outPath
          - name: createPydFlag
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 24Gi
            cpu: 12
          requests:
            memory: 24Gi
            cpu: 12
        args: 
          - >-
            java -jar /opt/potato-algo-adapter.jar
            --operatorCode={{inputs.parameters.operatorCode}}
            --execCode={{inputs.parameters.execCode}}
            --tenantId={{inputs.parameters.tenantId}}
            --fileList={{inputs.parameters.fileList}}
            --outPath={{inputs.parameters.outPath}}
            --createPydFlag={{inputs.parameters.createPydFlag}}
            --spring.config.location={{workflow.parameters.ceph_path}}/config/application-{{workflow.parameters.env}}.yml
            --s3.protocol={{workflow.parameters.protocol}}
            --s3.ak={{workflow.parameters.accesskey}}
            --s3.sk={{workflow.parameters.secretkey}}
            --s3.bucket={{workflow.parameters.output_bucket}}
            --s3.endpoint={{workflow.parameters.endpoint}}
            --s3.lanEndpoint={{workflow.parameters.inner_endpoint}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1639562597740
      inputs:
        parameters:
          - name: input_files
          - name: output_dir
          - name: dem_file
          - name: config_file
          - name: block_size_x
          - name: block_size_y
          - name: grid_num_x
          - name: grid_num_y
          - name: single_model_match
          - name: grid_filter_size
          - name: image_type
          - name: ul_lat
          - name: ul_long
          - name: ur_lat
          - name: ur_long
          - name: lr_lat
          - name: lr_long
          - name: ll_lat
          - name: ll_long
          - name: tasks_per_node
      outputs:
        parameters:
          - name: n_model_txt
            valueFrom:
              path: /tmp/n_models.txt
          - name: batches
            valueFrom:
              path: /tmp/batches.txt
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python3 /opt/rsi/xq_match_task_sheet_cmd_v2_prepare.py
            --input_files={{inputs.parameters.input_files}}
            --output_dir={{inputs.parameters.output_dir}}
            --dem_file={{inputs.parameters.dem_file}}
            --config_file={{inputs.parameters.config_file}}
            --block_size_x={{inputs.parameters.block_size_x}}
            --block_size_y={{inputs.parameters.block_size_y}}
            --grid_num_x={{inputs.parameters.grid_num_x}}
            --grid_num_y={{inputs.parameters.grid_num_y}}
            --single_model_match={{inputs.parameters.single_model_match}}
            --grid_filter_size={{inputs.parameters.grid_filter_size}}
            --image_type={{inputs.parameters.image_type}}
            --ul_lat={{inputs.parameters.ul_lat}}
            --ul_long={{inputs.parameters.ul_long}}
            --ur_lat={{inputs.parameters.ur_lat}}
            --ur_long={{inputs.parameters.ur_long}}
            --lr_lat={{inputs.parameters.lr_lat}}
            --lr_long={{inputs.parameters.lr_long}}
            --ll_lat={{inputs.parameters.ll_lat}}
            --ll_long={{inputs.parameters.ll_long}}
            --tasks_per_node={{inputs.parameters.tasks_per_node}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1639562603172
      inputs:
        parameters:
          - name: config_file
          - name: from_model
          - name: n_models
          - name: max_models
          - name: tasks_per_node
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 16Gi
            cpu: 8
            nvidia.com/gpu: 1
          requests:
            memory: 16Gi
            cpu: 8
            nvidia.com/gpu: 1
        args: 
          - >-
            python /opt/rsi/xq_match_task_sheet_cmd_v2_run.py
            --config_file={{inputs.parameters.config_file}}
            --from_model={{inputs.parameters.from_model}}
            --n_models={{inputs.parameters.n_models}}
            --max_models={{inputs.parameters.max_models}}
            --tasks_per_node={{inputs.parameters.tasks_per_node}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1639985413560
      inputs:
        parameters:
          - name: pan_file
          - name: mss_file
          - name: config_file
          - name: output_file
          - name: fusion_type
          - name: green_enhance
          - name: sharpen
          - name: create_pyd
          - name: resampling_kernel
          - name: green_enhance_coef
          - name: only_rgb
          - name: adjust_band
        artifacts:
          - name: items
            path: /tmp/dom_parallel.json
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 16Gi
            cpu: 8
          requests:
            memory: 16Gi
            cpu: 8
        args: 
          - >-
            python3 /opt/rsi/xq_fusion_cmd.py
            --pan_file={{inputs.parameters.pan_file}}
            --mss_file={{inputs.parameters.mss_file}}
            --config_file={{inputs.parameters.config_file}}
            --output_file={{inputs.parameters.output_file}}
            --fusion_type={{inputs.parameters.fusion_type}}
            --green_enhance={{inputs.parameters.green_enhance}}
            --sharpen={{inputs.parameters.sharpen}}
            --create_pyd={{inputs.parameters.create_pyd}}
            --resampling_kernel={{inputs.parameters.resampling_kernel}}
            --green_enhance_coef={{inputs.parameters.green_enhance_coef}}
            --only_rgb={{inputs.parameters.only_rgb}}
            --adjust_band={{inputs.parameters.adjust_band}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1639988155975
      inputs:
        parameters:
          - name: input_file
          - name: output_file
          - name: config_file
          - name: min_cut_coef
          - name: max_cut_coef
          - name: create_pyd
          - name: green_enhance
          - name: green_enhance_coef
          - name: only_rgb
          - name: adjust_band
          - name: exposure_suppress
          - name: adaptive_stretch
          - name: tasks
        artifacts:
          - name: items
            path: /tmp/dom_parallel.json
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 16Gi
            cpu: 8
          requests:
            memory: 16Gi
            cpu: 8
        args: 
          - >-
            python3 /opt/rsi/xq_image_outbyte_cmd.py
            --input_file={{inputs.parameters.input_file}}
            --output_file={{inputs.parameters.output_file}}
            --config_file={{inputs.parameters.config_file}}
            --min_cut_coef={{inputs.parameters.min_cut_coef}}
            --max_cut_coef={{inputs.parameters.max_cut_coef}}
            --create_pyd={{inputs.parameters.create_pyd}}
            --green_enhance={{inputs.parameters.green_enhance}}
            --green_enhance_coef={{inputs.parameters.green_enhance_coef}}
            --only_rgb={{inputs.parameters.only_rgb}}
            --adjust_band={{inputs.parameters.adjust_band}}
            --exposure_suppress={{inputs.parameters.exposure_suppress}}
            --adaptive_stretch={{inputs.parameters.adaptive_stretch}}
            --tasks={{inputs.parameters.tasks}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1639989997871
      inputs:
        parameters:
          - name: result_dir
          - name: input_dir
          - name: output_file
          - name: image_type
      outputs:
        artifacts:
          - name: items
            path: /tmp/xqks_parallel.json
        parameters:
          - name: count
            valueFrom:
              path: /tmp/count
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-parallel:v0304'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 4Gi
            cpu: 2
          requests:
            memory: 4Gi
            cpu: 2
        args: 
          - >-
            python /opt/rsi/process/xq_gcpmatch_rule.py
            --result_dir={{inputs.parameters.result_dir}}
            --input_dir={{inputs.parameters.input_dir}}
            --output_file={{inputs.parameters.output_file}}
            --image_type={{inputs.parameters.image_type}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1639990256135
      inputs:
        parameters:
          - name: config_file
          - name: tag
          - name: block_size
          - name: n_blocks
          - name: search_range
          - name: match_method
          - name: band_index
          - name: confidence
          - name: generate_imp
          - name: wallis_filter
          - name: imp_warp_mode
          - name: input_file
          - name: output_file
          - name: dem_path
          - name: reference_images
          - name: is_gf7
        artifacts:
          - name: items
            path: /tmp/intersected_gcp.json
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 16Gi
            cpu: 8
          requests:
            memory: 16Gi
            cpu: 8
        args: 
          - >-
            python3 /opt/rsi/xq_gcp_match_cmd2.py
            --config_file={{inputs.parameters.config_file}}
            --tag={{inputs.parameters.tag}}
            --block_size={{inputs.parameters.block_size}}
            --n_blocks={{inputs.parameters.n_blocks}}
            --search_range={{inputs.parameters.search_range}}
            --match_method={{inputs.parameters.match_method}}
            --band_index={{inputs.parameters.band_index}}
            --confidence={{inputs.parameters.confidence}}
            --generate_imp={{inputs.parameters.generate_imp}}
            --wallis_filter={{inputs.parameters.wallis_filter}}
            --imp_warp_mode={{inputs.parameters.imp_warp_mode}}
            --input_file={{inputs.parameters.input_file}}
            --output_file={{inputs.parameters.output_file}}
            --dem_path={{inputs.parameters.dem_path}}
            --reference_images={{inputs.parameters.reference_images}}
            --is_gf7={{inputs.parameters.is_gf7}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1640050229747
      inputs:
        parameters:
          - name: input_file
          - name: output_file
          - name: config_file
          - name: dem_file
          - name: gsd_x
          - name: gsd_y
          - name: wkt_hcs
          - name: resampling_kernel
          - name: output_8bits
          - name: clip_by_dem
          - name: create_pyd
          - name: tasks
        artifacts:
          - name: items
            path: /tmp/image_parallel.json
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python3 /opt/rsi/xq_ortho_cmd.py
            --input_file={{inputs.parameters.input_file}}
            --output_file={{inputs.parameters.output_file}}
            --config_file={{inputs.parameters.config_file}}
            --dem_file={{inputs.parameters.dem_file}}
            --gsd_x={{inputs.parameters.gsd_x}}
            --gsd_y={{inputs.parameters.gsd_y}}
            --wkt_hcs={{inputs.parameters.wkt_hcs}}
            --resampling_kernel={{inputs.parameters.resampling_kernel}}
            --output_8bits={{inputs.parameters.output_8bits}}
            --clip_by_dem={{inputs.parameters.clip_by_dem}}
            --create_pyd={{inputs.parameters.create_pyd}}
            --tasks={{inputs.parameters.tasks}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1640051497180
      inputs:
        parameters:
          - name: input_file
          - name: output_file
          - name: config_file
          - name: processing_mode
          - name: is_single_color
          - name: single_color_coef
          - name: processing_method
          - name: block_size
          - name: std_file
          - name: use_cloud_mask
          - name: cloud_mask_file
          - name: create_pyd
          - name: diff_limit
          - name: diff_limit_coef
          - name: var_diff_limit_coef
          - name: stretch
          - name: min_coef
          - name: max_coef
          - name: expose_control
          - name: adjust_brightness
          - name: brightness_coef
          - name: adjust_contrast
          - name: contrast_coef
          - name: task
        artifacts:
          - name: items
            path: /tmp/image_parallel.json
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 16Gi
            cpu: 8
          requests:
            memory: 16Gi
            cpu: 8
        args: 
          - >-
            python3 /opt/rsi/xq_dodging_cmd1.py
            --input_file={{inputs.parameters.input_file}}
            --output_file={{inputs.parameters.output_file}}
            --config_file={{inputs.parameters.config_file}}
            --processing_mode={{inputs.parameters.processing_mode}}
            --is_single_color={{inputs.parameters.is_single_color}}
            --single_color_coef={{inputs.parameters.single_color_coef}}
            --processing_method={{inputs.parameters.processing_method}}
            --block_size={{inputs.parameters.block_size}}
            --std_file={{inputs.parameters.std_file}}
            --use_cloud_mask={{inputs.parameters.use_cloud_mask}}
            --cloud_mask_file={{inputs.parameters.cloud_mask_file}}
            --create_pyd={{inputs.parameters.create_pyd}}
            --diff_limit={{inputs.parameters.diff_limit}}
            --diff_limit_coef={{inputs.parameters.diff_limit_coef}}
            --var_diff_limit_coef={{inputs.parameters.var_diff_limit_coef}}
            --stretch={{inputs.parameters.stretch}}
            --min_coef={{inputs.parameters.min_coef}}
            --max_coef={{inputs.parameters.max_coef}}
            --expose_control={{inputs.parameters.expose_control}}
            --adjust_brightness={{inputs.parameters.adjust_brightness}}
            --brightness_coef={{inputs.parameters.brightness_coef}}
            --adjust_contrast={{inputs.parameters.adjust_contrast}}
            --contrast_coef={{inputs.parameters.contrast_coef}}
            --task={{inputs.parameters.task}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1640051672030
      inputs:
        parameters:
          - name: input_file
          - name: output_file
          - name: config_file
          - name: self_adjust
          - name: n_block_size
          - name: n_guide_block_size
          - name: n_max_atom
          - name: d_epsilon
          - name: d_sky
          - name: d_omega
          - name: dehaze_method
          - name: b_clahe
          - name: d_cut_limit
          - name: all_band_clahe
          - name: expose_control
        artifacts:
          - name: items
            path: /tmp/image_parallel.json
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python3 /opt/rsi/xq_dehaze_cmd.py
            --input_file={{inputs.parameters.input_file}}
            --output_file={{inputs.parameters.output_file}}
            --config_file={{inputs.parameters.config_file}}
            --self_adjust={{inputs.parameters.self_adjust}}
            --n_block_size={{inputs.parameters.n_block_size}}
            --n_guide_block_size={{inputs.parameters.n_guide_block_size}}
            --n_max_atom={{inputs.parameters.n_max_atom}}
            --d_epsilon={{inputs.parameters.d_epsilon}}
            --d_sky={{inputs.parameters.d_sky}}
            --d_omega={{inputs.parameters.d_omega}}
            --dehaze_method={{inputs.parameters.dehaze_method}}
            --b_clahe={{inputs.parameters.b_clahe}}
            --d_cut_limit={{inputs.parameters.d_cut_limit}}
            --all_band_clahe={{inputs.parameters.all_band_clahe}}
            --expose_control={{inputs.parameters.expose_control}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1640080697712
      inputs:
        parameters:
          - name: input_files
          - name: output_file
          - name: dem_file
          - name: config_file
          - name: tie_file
          - name: sensor_type
          - name: image_type
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python3 /opt/rsi/xq_intersect_obj_cmd.py
            --input_files={{inputs.parameters.input_files}}
            --output_file={{inputs.parameters.output_file}}
            --dem_file={{inputs.parameters.dem_file}}
            --config_file={{inputs.parameters.config_file}}
            --tie_file={{inputs.parameters.tie_file}}
            --sensor_type={{inputs.parameters.sensor_type}}
            --image_type={{inputs.parameters.image_type}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1641370361970
      inputs:
        parameters:
          - name: result_dir
          - name: input_dir
          - name: output_file
          - name: suffix
      outputs:
        artifacts:
          - name: items
            path: /tmp/image_parallel.json
        parameters:
          - name: count
            valueFrom:
              path: /tmp/count
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-parallel:v0304'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python3 /opt/rsi/process/xq_batch_rule.py
            --result_dir={{inputs.parameters.result_dir}}
            --input_dir={{inputs.parameters.input_dir}}
            --output_file={{inputs.parameters.output_file}}
            --suffix={{inputs.parameters.suffix}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1641370379282
      inputs:
        parameters:
          - name: input_file
          - name: output_file
          - name: input_shp_dir
          - name: config_file
          - name: exact_intersection
        artifacts:
          - name: items
            path: /tmp/image_parallel.json
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python3 /opt/rsi/xq_intersect_cmd.py
            --input_file={{inputs.parameters.input_file}}
            --output_file={{inputs.parameters.output_file}}
            --input_shp_dir={{inputs.parameters.input_shp_dir}}
            --config_file={{inputs.parameters.config_file}}
            --exact_intersection={{inputs.parameters.exact_intersection}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1641370385159
      inputs:
        parameters:
          - name: input_txt_dir
          - name: output_file
          - name: count
          - name: output_dir
      outputs:
        artifacts:
          - name: items
            path: /tmp/intersected_shps.json
        parameters:
          - name: count
            valueFrom:
              path: /tmp/count
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-parallel:v0304'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python /opt/rsi/process/parse_intersected.py
            --input_txt_dir={{inputs.parameters.input_txt_dir}}
            --output_file={{inputs.parameters.output_file}}
            --count={{inputs.parameters.count}}
            --output_dir={{inputs.parameters.output_dir}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1641370734794
      inputs:
        parameters:
          - name: result_dir
          - name: input_dir
          - name: output_file
          - name: suffix
      outputs:
        artifacts:
          - name: items
            path: /tmp/image_parallel.json
        parameters:
          - name: count
            valueFrom:
              path: /tmp/count
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-parallel:v0304'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python3 /opt/rsi/process/xq_batch_rule.py
            --result_dir={{inputs.parameters.result_dir}}
            --input_dir={{inputs.parameters.input_dir}}
            --output_file={{inputs.parameters.output_file}}
            --suffix={{inputs.parameters.suffix}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1641370750425
      inputs:
        parameters:
          - name: input_file
          - name: output_file
          - name: input_shp_dir
          - name: config_file
          - name: exact_intersection
        artifacts:
          - name: items
            path: /tmp/image_parallel.json
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python3 /opt/rsi/xq_intersect_cmd.py
            --input_file={{inputs.parameters.input_file}}
            --output_file={{inputs.parameters.output_file}}
            --input_shp_dir={{inputs.parameters.input_shp_dir}}
            --config_file={{inputs.parameters.config_file}}
            --exact_intersection={{inputs.parameters.exact_intersection}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1641370755999
      inputs:
        parameters:
          - name: input_txt_dir
          - name: output_file
          - name: count
          - name: output_dir
      outputs:
        artifacts:
          - name: items
            path: /tmp/intersected_shps.json
        parameters:
          - name: count
            valueFrom:
              path: /tmp/count
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-parallel:v0304'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python /opt/rsi/process/parse_intersected.py
            --input_txt_dir={{inputs.parameters.input_txt_dir}}
            --output_file={{inputs.parameters.output_file}}
            --count={{inputs.parameters.count}}
            --output_dir={{inputs.parameters.output_dir}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1641460540030
      inputs:
        parameters:
          - name: input_files
          - name: output_dir
          - name: dem_file
          - name: config_file
          - name: is_del_tie_error_pt
          - name: del_tie_pt_thre
          - name: is_del_gcp_error_pt
          - name: del_gcp_thre
          - name: adjustment_model
          - name: base_img_weight
          - name: is_set_gcp_weight
          - name: gcp_weight
          - name: tie_file
          - name: gcp_file
          - name: sensor_type
          - name: error_images
          - name: ctrl_images
          - name: image_type
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python3 /opt/rsi/xq_bundle_cmd.py
            --input_files={{inputs.parameters.input_files}}
            --output_dir={{inputs.parameters.output_dir}}
            --dem_file={{inputs.parameters.dem_file}}
            --config_file={{inputs.parameters.config_file}}
            --is_del_tie_error_pt={{inputs.parameters.is_del_tie_error_pt}}
            --del_tie_pt_thre={{inputs.parameters.del_tie_pt_thre}}
            --is_del_gcp_error_pt={{inputs.parameters.is_del_gcp_error_pt}}
            --del_gcp_thre={{inputs.parameters.del_gcp_thre}}
            --adjustment_model={{inputs.parameters.adjustment_model}}
            --base_img_weight={{inputs.parameters.base_img_weight}}
            --is_set_gcp_weight={{inputs.parameters.is_set_gcp_weight}}
            --gcp_weight={{inputs.parameters.gcp_weight}}
            --tie_file={{inputs.parameters.tie_file}}
            --gcp_file={{inputs.parameters.gcp_file}}
            --sensor_type={{inputs.parameters.sensor_type}}
            --error_images={{inputs.parameters.error_images}}
            --ctrl_images={{inputs.parameters.ctrl_images}}
            --image_type={{inputs.parameters.image_type}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1645077076753
      inputs:
        parameters:
          - name: inputDir
          - name: outputFile
          - name: configFile
          - name: mosaicListFile
          - name: extentShpFile
          - name: gsd
          - name: createPyd
          - name: findLine
          - name: extentIsEnvelope
          - name: resampleMethod
          - name: genLineOnly
          - name: smallOverlap
          - name: tenantId
          - name: execCode
          - name: operatorCode
        artifacts:
          - name: items
            path: /tmp/intersected_shps.json
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: [' java -jar /opt/potato-algo-adapter.jar --inputDir={{inputs.parameters.inputDir}} --outputFile={{inputs.parameters.outputFile}} --configFile={{inputs.parameters.configFile}} --mosaicListFile={{inputs.parameters.mosaicListFile}} --extentShpFile={{inputs.parameters.extentShpFile}} --gsd={{inputs.parameters.gsd}} --createPyd={{inputs.parameters.createPyd}} --findLine={{inputs.parameters.findLine}} --extentIsEnvelope={{inputs.parameters.extentIsEnvelope}} --resampleMethod={{inputs.parameters.resampleMethod}} --genLineOnly={{inputs.parameters.genLineOnly}} --smallOverlap={{inputs.parameters.smallOverlap}} --tenantId={{inputs.parameters.tenantId}} --execCode={{inputs.parameters.execCode}} --operatorCode={{inputs.parameters.operatorCode}} --spring.config.location={{workflow.parameters.ceph_path}}/config/application-{{workflow.parameters.env}}.yml --s3.protocol={{workflow.parameters.protocol}} --s3.ak={{workflow.parameters.accesskey}} --s3.sk={{workflow.parameters.secretkey}} --s3.bucket={{workflow.parameters.output_bucket}} --s3.endpoint={{workflow.parameters.endpoint}} --s3.lanEndpoint={{workflow.parameters.inner_endpoint}}']
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1645078224519
      inputs:
        parameters:
          - name: inputDir
          - name: outputFile
          - name: configFile
          - name: mosaicListFile
          - name: extentShpFile
          - name: gsd
          - name: createPyd
          - name: findLine
          - name: extentIsEnvelope
          - name: resampleMethod
          - name: genLineOnly
          - name: smallOverlap
          - name: tenantId
          - name: execCode
          - name: operatorCode
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: [' java -jar /opt/potato-algo-adapter.jar --inputDir={{inputs.parameters.inputDir}} --outputFile={{inputs.parameters.outputFile}} --configFile={{inputs.parameters.configFile}} --mosaicListFile={{inputs.parameters.mosaicListFile}} --extentShpFile={{inputs.parameters.extentShpFile}} --gsd={{inputs.parameters.gsd}} --createPyd={{inputs.parameters.createPyd}} --findLine={{inputs.parameters.findLine}} --extentIsEnvelope={{inputs.parameters.extentIsEnvelope}} --resampleMethod={{inputs.parameters.resampleMethod}} --genLineOnly={{inputs.parameters.genLineOnly}} --smallOverlap={{inputs.parameters.smallOverlap}} --tenantId={{inputs.parameters.tenantId}} --execCode={{inputs.parameters.execCode}} --operatorCode={{inputs.parameters.operatorCode}} --spring.config.location={{workflow.parameters.ceph_path}}/config/application-{{workflow.parameters.env}}.yml --s3.protocol={{workflow.parameters.protocol}} --s3.ak={{workflow.parameters.accesskey}} --s3.sk={{workflow.parameters.secretkey}} --s3.bucket={{workflow.parameters.output_bucket}} --s3.endpoint={{workflow.parameters.endpoint}} --s3.lanEndpoint={{workflow.parameters.inner_endpoint}}']
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1645078846350
      inputs:
        parameters:
          - name: inputDir
          - name: outputFile
          - name: configFile
          - name: mosaicListFile
          - name: extentShpFile
          - name: gsd
          - name: createPyd
          - name: findLine
          - name: extentIsEnvelope
          - name: resampleMethod
          - name: genLineOnly
          - name: smallOverlap
          - name: tenantId
          - name: execCode
          - name: operatorCode
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: [' java -jar /opt/potato-algo-adapter.jar --inputDir={{inputs.parameters.inputDir}} --outputFile={{inputs.parameters.outputFile}} --configFile={{inputs.parameters.configFile}} --mosaicListFile={{inputs.parameters.mosaicListFile}} --extentShpFile={{inputs.parameters.extentShpFile}} --gsd={{inputs.parameters.gsd}} --createPyd={{inputs.parameters.createPyd}} --findLine={{inputs.parameters.findLine}} --extentIsEnvelope={{inputs.parameters.extentIsEnvelope}} --resampleMethod={{inputs.parameters.resampleMethod}} --genLineOnly={{inputs.parameters.genLineOnly}} --smallOverlap={{inputs.parameters.smallOverlap}} --tenantId={{inputs.parameters.tenantId}} --execCode={{inputs.parameters.execCode}} --operatorCode={{inputs.parameters.operatorCode}} --spring.config.location={{workflow.parameters.ceph_path}}/config/application-{{workflow.parameters.env}}.yml --s3.protocol={{workflow.parameters.protocol}} --s3.ak={{workflow.parameters.accesskey}} --s3.sk={{workflow.parameters.secretkey}} --s3.bucket={{workflow.parameters.output_bucket}} --s3.endpoint={{workflow.parameters.endpoint}} --s3.lanEndpoint={{workflow.parameters.inner_endpoint}}']
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1645079069831
      inputs:
        parameters:
          - name: inputDir
          - name: outputFile
          - name: configFile
          - name: mosaicListFile
          - name: extentShpFile
          - name: gsd
          - name: createPyd
          - name: findLine
          - name: extentIsEnvelope
          - name: resampleMethod
          - name: genLineOnly
          - name: smallOverlap
          - name: tenantId
          - name: execCode
          - name: operatorCode
        artifacts:
          - name: items
            path: /tmp/intersected_shps.json
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: [' java -jar /opt/potato-algo-adapter.jar --inputDir={{inputs.parameters.inputDir}} --outputFile={{inputs.parameters.outputFile}} --configFile={{inputs.parameters.configFile}} --mosaicListFile={{inputs.parameters.mosaicListFile}} --extentShpFile={{inputs.parameters.extentShpFile}} --gsd={{inputs.parameters.gsd}} --createPyd={{inputs.parameters.createPyd}} --findLine={{inputs.parameters.findLine}} --extentIsEnvelope={{inputs.parameters.extentIsEnvelope}} --resampleMethod={{inputs.parameters.resampleMethod}} --genLineOnly={{inputs.parameters.genLineOnly}} --smallOverlap={{inputs.parameters.smallOverlap}} --tenantId={{inputs.parameters.tenantId}} --execCode={{inputs.parameters.execCode}} --operatorCode={{inputs.parameters.operatorCode}} --spring.config.location={{workflow.parameters.ceph_path}}/config/application-{{workflow.parameters.env}}.yml --s3.protocol={{workflow.parameters.protocol}} --s3.ak={{workflow.parameters.accesskey}} --s3.sk={{workflow.parameters.secretkey}} --s3.bucket={{workflow.parameters.output_bucket}} --s3.endpoint={{workflow.parameters.endpoint}} --s3.lanEndpoint={{workflow.parameters.inner_endpoint}}']
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1649828538836
      inputs:
        parameters:
          - name: input_file
          - name: output_file
          - name: input_shp_dir
          - name: config_file
          - name: exact_intersection
          - name: is_image_dir
        artifacts:
          - name: items
            path: /tmp/xqks_parallel.json
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python3 /opt/rsi/xq_intersect_cmd.py
            --input_file={{inputs.parameters.input_file}}
            --output_file={{inputs.parameters.output_file}}
            --input_shp_dir={{inputs.parameters.input_shp_dir}}
            --config_file={{inputs.parameters.config_file}}
            --exact_intersection={{inputs.parameters.exact_intersection}}
            --is_image_dir={{inputs.parameters.is_image_dir}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1649828544087
      inputs:
        parameters:
          - name: input_dir
          - name: output_file
          - name: image_type
          - name: output_dir
      outputs:
        artifacts:
          - name: items
            path: /tmp/intersected_gcp.json
        parameters:
          - name: count
            valueFrom:
              path: /tmp/count
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-parallel:v0304'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python /opt/rsi/process/parse_intersected_gcp.py
            --input_dir={{inputs.parameters.input_dir}}
            --output_file={{inputs.parameters.output_file}}
            --image_type={{inputs.parameters.image_type}}
            --output_dir={{inputs.parameters.output_dir}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
  hostNetwork: true
  volumes:
    - name: workdir
      hostPath:
        path: '{{workflow.parameters.ceph_path}}'
    - name: sharedir
      hostPath:
        path: '{{workflow.parameters.share_path}}'