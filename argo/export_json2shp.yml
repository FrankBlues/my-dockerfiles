apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: export-edit-json2shp
  namespace: default
spec:
  entrypoint: export-edit-json2shp
  arguments:
    parameters:
      - name: ceph_path
        value: /mnt/cephfs
      - name: share_path
        value: /mnt/cifs
      - name: exec_code
        value: RSI202011091504
      - name: tenant_id
        value: 1
      - name: input_bucket
        value: rsi-private-beta5
      - name: output_bucket
        value: rsi-private-beta5
      - name: accesskey
        value: HBE4ZPQA3OLNNSMUNWWC
      - name: secretkey
        value: NNdgyDR3LbdpnmXe8APcHlnkTnbFOND2bs9lCmyU
      - name: endpoint
        value: '192.168.0.41:7480'
      - name: inner_endpoint
        value: '192.168.0.41:7480'
      - name: protocol
        value: http
      - name: inner_protocol
        value: http
      - name: store_type
        value: 2
      - name: env
        value: beta5
      - name: dataset_id
        value: 1
      - name: version_id
        value: 1
      - name: shp_file
        value: /mnt/cephfs/rsi/in.shp
  onExit: ''
  templates:
    - name: export-edit-json2shp
      parallelism: 150
      inputs:
        parameters:
          - name: ceph_path
          - name: share_path
          - name: exec_code
          - name: tenant_id
          - name: input_bucket
          - name: output_bucket
          - name: accesskey
          - name: secretkey
          - name: endpoint
          - name: inner_endpoint
          - name: protocol
          - name: inner_protocol
          - name: store_type
          - name: env
          - name: dataset_id
          - name: version_id
          - name: shp_file
        artifacts: []
      dag:
        tasks:
          - name: geojson-export-ywqk
            template: topo-1635329428266
            key: topo-1635329428266
            arguments:
              parameters:
                - name: dataSetId
                  value: '{{inputs.parameters.dataset_id}}'
                - name: dstPath
                  value: >-
                    {{inputs.parameters.ceph_path}}/rsi/result/{{inputs.parameters.tenant_id}}/{{inputs.parameters.exec_code}}/geojson/edit.json
                - name: tenantId
                  value: '{{inputs.parameters.tenant_id}}'
                - name: execCode
                  value: '{{inputs.parameters.exec_code}}'
                - name: operatorCode
                  value: exportShpData
                - name: versionId
                  value: '{{inputs.parameters.version_id}}'
            dependencies: []
          - name: json2shp-hsv0
            template: topo-1652667461981
            key: topo-1652667461981
            arguments:
              parameters:
                - name: tenantId
                  value: '{{inputs.parameters.tenant_id}}'
                - name: execCode
                  value: '{{inputs.parameters.exec_code}}'
                - name: operatorCode
                  value: jsonToShp
                - name: inputJson
                  value: >-
                    {{inputs.parameters.ceph_path}}/rsi/result/{{inputs.parameters.tenant_id}}/{{inputs.parameters.exec_code}}/geojson/edit.json
                - name: outShp
                  value: '{{inputs.parameters.shp_file}}'
                - name: appName
                  value: td_jsontoshp_analysis
            dependencies:
              - geojson-export-ywqk
      outputs:
        parameters: []
        artifacts: []
    - name: delay
      inputs:
        parameters:
          - name: time
      suspend:
        duration: '{{inputs.parameters.time}}'
    - name: topo-1635329428266
      inputs:
        parameters:
          - name: dataSetId
          - name: dstPath
          - name: tenantId
          - name: execCode
          - name: operatorCode
          - name: versionId
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-biz:v0.11.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 4Gi
            cpu: 4
          requests:
            memory: 4Gi
            cpu: 4
        args: 
          - >-
            java -jar /opt/potato-algo-adapter.jar
            --dataSetId={{inputs.parameters.dataSetId}}
            --dstPath={{inputs.parameters.dstPath}}
            --tenantId={{inputs.parameters.tenantId}}
            --execCode={{inputs.parameters.execCode}}
            --operatorCode={{inputs.parameters.operatorCode}}
            --versionId={{inputs.parameters.versionId}}
            --spring.config.location={{workflow.parameters.ceph_path}}/rsi/config/application-ai-{{workflow.parameters.env}}.yml
            --s3.protocol={{workflow.parameters.protocol}}
            --s3.ak={{workflow.parameters.accesskey}}
            --s3.sk={{workflow.parameters.secretkey}}
            --s3.bucket={{workflow.parameters.output_bucket}}
            --s3.endpoint={{workflow.parameters.endpoint}}
            --s3.lanEndpoint={{workflow.parameters.inner_endpoint}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
    - name: topo-1652667461981
      inputs:
        parameters:
          - name: tenantId
          - name: execCode
          - name: operatorCode
          - name: inputJson
          - name: outShp
          - name: appName
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-gis-business:v0.9.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            java -jar /opt/potato-algo-adapter.jar
            --tenantId={{inputs.parameters.tenantId}}
            --execCode={{inputs.parameters.execCode}}
            --operatorCode={{inputs.parameters.operatorCode}}
            --inputJson={{inputs.parameters.inputJson}}
            --outShp={{inputs.parameters.outShp}}
            --appName={{inputs.parameters.appName}}
            --spring.config.location={{workflow.parameters.ceph_path}}/rsi/config/application-ai-{{workflow.parameters.env}}.yml
            --s3.protocol={{workflow.parameters.protocol}}
            --s3.ak={{workflow.parameters.accesskey}}
            --s3.sk={{workflow.parameters.secretkey}}
            --s3.bucket={{workflow.parameters.output_bucket}}
            --s3.endpoint={{workflow.parameters.endpoint}}
            --s3.lanEndpoint={{workflow.parameters.inner_endpoint}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
  volumes:
    - name: workdir
      hostPath:
        path: '{{workflow.parameters.ceph_path}}'
    - name: sharedir
      hostPath:
        path: '{{workflow.parameters.share_path}}'
