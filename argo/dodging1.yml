apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: dodging-batch
  namespace: default
spec:
  entrypoint: dodging-batch
  arguments:
    parameters:
      - name: ceph_path
        value: /mnt/cephfs
      - name: share_path
        value: /mnt/cifs
      - name: exec_code
        value: RSI202012111412
      - name: tenant_id
        value: 1
      - name: input_bucket
        value: rsi-private-beta5
      - name: output_bucket
        value: rsi-private-beta5
      - name: accesskey
        value: HBE4ZPQA3OLNNSMUNWWC
      - name: secretkey
        value: NNdgyDR3LbdpnmXe8APcHlnkTnbFOND2bs9lCmyU
      - name: endpoint
        value: '192.168.0.41:7480'
      - name: inner_endpoint
        value: '192.168.0.41:7480'
      - name: protocol
        value: http
      - name: inner_protocol
        value: http
      - name: store_type
        value: 2
      - name: env
        value: private
      - name: input_path
        value: /mnt/cephfs/rsi/data/Test/mlm/result/dom/outbyte
      - name: output_path
        value: /mnt/cephfs/rsi/data/Test/mlm/result/dom/
      - name: dodging_std_file
        value: /mnt/cephfs/rsi/data/test_AT/dom/s_16_xian_prj.tif
      - name: chunk_size
        value: 512
      - name: processing_method
        value: 3
      - name: is_single_color
        value: 0
      - name: single_color_coef
        value: '0.3'
      - name: use_cloud_mask
        value: 0
      - name: cloud_mask_file
        value: ''
      - name: exposure_suppress
        value: 0
      - name: diff_limit
        value: 0
      - name: diff_limit_coef
        value: '0.5'
      - name: var_diff_limit_coef
        value: '0.5'
      - name: adjust_brightness
        value: 0
      - name: brightness_coef
        value: '0.1'
      - name: adjust_contrast
        value: 0
      - name: contrast_coef
        value: '0.1'
      - name: create_pyd
        value: 1
  onExit: ''
  templates:
    - name: dodging-batch
      parallelism: 150
      inputs:
        parameters:
          - name: ceph_path
          - name: share_path
          - name: exec_code
          - name: tenant_id
          - name: input_bucket
          - name: output_bucket
          - name: accesskey
          - name: secretkey
          - name: endpoint
          - name: inner_endpoint
          - name: protocol
          - name: inner_protocol
          - name: store_type
          - name: env
          - name: input_path
          - name: output_path
          - name: dodging_std_file
          - name: chunk_size
          - name: processing_method
          - name: is_single_color
          - name: single_color_coef
          - name: use_cloud_mask
          - name: cloud_mask_file
          - name: exposure_suppress
          - name: diff_limit
          - name: diff_limit_coef
          - name: var_diff_limit_coef
          - name: adjust_brightness
          - name: brightness_coef
          - name: adjust_contrast
          - name: contrast_coef
          - name: create_pyd
        artifacts: []
      dag:
        tasks:
          - name: xq-batch-rule-8235
            template: topo-1634981028628
            key: topo-1634981028628
            arguments:
              parameters:
                - name: result_dir
                  value: '{{inputs.parameters.output_path}}'
                - name: input_dir
                  value: '{{inputs.parameters.input_path}}'
                - name: output_file
                  value: /tmp/image_parallel.json
                - name: suffix
                  value: .tif
            dependencies: []
          - name: thumbnail-0xla
            template: topo-1644911101846
            key: topo-1644911101846
            arguments:
              parameters:
                - name: tenantId
                  value: '{{inputs.parameters.tenant_id}}'
                - name: execCode
                  value: '{{inputs.parameters.exec_code}}'
                - name: operatorCode
                  value: tdgisAnalysis
                - name: inputPath
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].dodging_file'| sed 's/\"//g'`
                - name: outputPath
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].thumbnail_dodging'| sed 's/\"//g'`
                - name: appName
                  value: at_raster_thumbnail
                - name: operatorCodeAlias
                  value: uniformColor-analysis
              artifacts:
                - name: items
                  from: '{{tasks.xq-batch-rule-8235.outputs.artifacts.items}}'
            dependencies:
              - dodging-e42r
            withSequence:
              count: '{{tasks.xq-batch-rule-8235.outputs.parameters.count}}'
          - name: dodging-e42r
            template: topo-1647934542746
            key: topo-1647934542746
            arguments:
              parameters:
                - name: operatorCode
                  value: uniformColor
                - name: execCode
                  value: '{{inputs.parameters.exec_code}}'
                - name: tenantId
                  value: '{{inputs.parameters.tenant_id}}'
                - name: chunkSize
                  value: '{{inputs.parameters.chunk_size}}'
                - name: processingMethod
                  value: '{{inputs.parameters.processing_method}}'
                - name: imageFile
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].input_file'| sed 's/\"//g'`
                - name: isSingleColor
                  value: '{{inputs.parameters.is_single_color}}'
                - name: singleColorCoef
                  value: '{{inputs.parameters.single_color_coef}}'
                - name: stdFile
                  value: '{{inputs.parameters.dodging_std_file}}'
                - name: useCloudMask
                  value: '{{inputs.parameters.use_cloud_mask}}'
                - name: createPyd
                  value: 'true'
                - name: diffLimit
                  value: '{{inputs.parameters.diff_limit}}'
                - name: outPath
                  value: >-
                    `cat /tmp/image_parallel.json | jq
                    '.[{{item}}].dodging_path'| sed 's/\"//g'`
                - name: processingMode
                  value: '0'
                - name: diffLimitCoef
                  value: '{{inputs.parameters.diff_limit_coef}}'
                - name: varDiffLimitCoef
                  value: '{{inputs.parameters.var_diff_limit_coef}}'
                - name: stretch
                  value: '0'
                - name: minCoef
                  value: '0.25000000'
                - name: maxCoef
                  value: '0.25000000'
                - name: tasks
                  value: '4'
                - name: exposeControl
                  value: '{{inputs.parameters.exposure_suppress}}'
                - name: adjustBrightness
                  value: '{{inputs.parameters.adjust_brightness}}'
                - name: brightnessCoef
                  value: '{{inputs.parameters.brightness_coef}}'
                - name: adjustContrast
                  value: '{{inputs.parameters.adjust_contrast}}'
                - name: contrastCoef
                  value: '{{inputs.parameters.contrast_coef}}'
              artifacts:
                - name: items
                  from: '{{tasks.xq-batch-rule-8235.outputs.artifacts.items}}'
            dependencies:
              - xq-batch-rule-8235
            withSequence:
              count: '{{tasks.xq-batch-rule-8235.outputs.parameters.count}}'
      outputs:
        parameters: []
        artifacts: []
    - name: delay
      inputs:
        parameters:
          - name: time
      suspend:
        duration: '{{inputs.parameters.time}}'
    - name: topo-1634981028628
      inputs:
        parameters:
          - name: result_dir
          - name: input_dir
          - name: output_file
          - name: suffix
      outputs:
        artifacts:
          - name: items
            path: /tmp/image_parallel.json
        parameters:
          - name: count
            valueFrom:
              path: /tmp/count
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-parallel:v0304'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            python3 /opt/rsi/process/xq_batch_rule_multi_source.py
            --result_dir={{inputs.parameters.result_dir}}
            --input_dir={{inputs.parameters.input_dir}}
            --output_file={{inputs.parameters.output_file}}
            --suffix={{inputs.parameters.suffix}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
          - name: uploaddir
            mountPath: /mnt/cephfs/rsi-private-beta/rsi
    - name: topo-1644911101846
      inputs:
        parameters:
          - name: tenantId
          - name: execCode
          - name: operatorCode
          - name: inputPath
          - name: outputPath
          - name: appName
          - name: operatorCodeAlias
        artifacts:
          - name: items
            path: /tmp/image_parallel.json
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-gis-business:v0.7.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            java -jar /opt/potato-algo-adapter.jar
            --tenantId={{inputs.parameters.tenantId}}
            --execCode={{inputs.parameters.execCode}}
            --operatorCode={{inputs.parameters.operatorCode}}
            --inputPath={{inputs.parameters.inputPath}}
            --outputPath={{inputs.parameters.outputPath}}
            --appName={{inputs.parameters.appName}}
            --operatorCodeAlias={{inputs.parameters.operatorCodeAlias}}
            --spring.config.location={{workflow.parameters.ceph_path}}/rsi/config/application-{{workflow.parameters.env}}.yml
            --s3.protocol={{workflow.parameters.protocol}}
            --s3.ak={{workflow.parameters.accesskey}}
            --s3.sk={{workflow.parameters.secretkey}}
            --s3.bucket={{workflow.parameters.output_bucket}}
            --s3.endpoint={{workflow.parameters.endpoint}}
            --s3.lanEndpoint={{workflow.parameters.inner_endpoint}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
          - name: uploaddir
            mountPath: /mnt/cephfs/rsi-private-beta/rsi
    - name: topo-1647934542746
      inputs:
        parameters:
          - name: operatorCode
          - name: execCode
          - name: tenantId
          - name: chunkSize
          - name: processingMethod
          - name: imageFile
          - name: isSingleColor
          - name: singleColorCoef
          - name: stdFile
          - name: useCloudMask
          - name: createPyd
          - name: diffLimit
          - name: outPath
          - name: processingMode
          - name: diffLimitCoef
          - name: varDiffLimitCoef
          - name: stretch
          - name: minCoef
          - name: maxCoef
          - name: tasks
          - name: exposeControl
          - name: adjustBrightness
          - name: brightnessCoef
          - name: adjustContrast
          - name: contrastCoef
        artifacts:
          - name: items
            path: /tmp/image_parallel.json
      container:
        image: 'registry.private.cloud:30002/rsi_group/rsi-xq:v0.12.0'
        command:
          - sh
          - '-c'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
            cpu: 4
          requests:
            memory: 8Gi
            cpu: 4
        args: 
          - >-
            java -jar /opt/potato-algo-adapter.jar
            --operatorCode={{inputs.parameters.operatorCode}}
            --execCode={{inputs.parameters.execCode}}
            --tenantId={{inputs.parameters.tenantId}}
            --chunkSize={{inputs.parameters.chunkSize}}
            --processingMethod={{inputs.parameters.processingMethod}}
            --imageFile={{inputs.parameters.imageFile}}
            --isSingleColor={{inputs.parameters.isSingleColor}}
            --singleColorCoef={{inputs.parameters.singleColorCoef}}
            --stdFile={{inputs.parameters.stdFile}}
            --useCloudMask={{inputs.parameters.useCloudMask}}
            --createPyd={{inputs.parameters.createPyd}}
            --diffLimit={{inputs.parameters.diffLimit}}
            --outPath={{inputs.parameters.outPath}}
            --processingMode={{inputs.parameters.processingMode}}
            --diffLimitCoef={{inputs.parameters.diffLimitCoef}}
            --varDiffLimitCoef={{inputs.parameters.varDiffLimitCoef}}
            --stretch={{inputs.parameters.stretch}}
            --minCoef={{inputs.parameters.minCoef}}
            --maxCoef={{inputs.parameters.maxCoef}}
            --tasks={{inputs.parameters.tasks}}
            --exposeControl={{inputs.parameters.exposeControl}}
            --adjustBrightness={{inputs.parameters.adjustBrightness}}
            --brightnessCoef={{inputs.parameters.brightnessCoef}}
            --adjustContrast={{inputs.parameters.adjustContrast}}
            --contrastCoef={{inputs.parameters.contrastCoef}}
            --spring.config.location={{workflow.parameters.ceph_path}}/rsi/config/application-{{workflow.parameters.env}}.yml
            --s3.protocol={{workflow.parameters.protocol}}
            --s3.ak={{workflow.parameters.accesskey}}
            --s3.sk={{workflow.parameters.secretkey}}
            --s3.bucket={{workflow.parameters.output_bucket}}
            --s3.endpoint={{workflow.parameters.endpoint}}
            --s3.lanEndpoint={{workflow.parameters.inner_endpoint}}
        volumeMounts:
          - name: workdir
            mountPath: '{{workflow.parameters.ceph_path}}'
          - name: sharedir
            mountPath: '{{workflow.parameters.share_path}}'
          - name: uploaddir
            mountPath: /mnt/cephfs/rsi-private-beta/rsi
  hostNetwork: true
  volumes:
    - name: workdir
      hostPath:
        path: '{{workflow.parameters.ceph_path}}'
    - name: sharedir
      hostPath:
        path: '{{workflow.parameters.share_path}}'
    - name: uploaddir
      hostPath:
        path: /mnt/cephfs/rsi-private-beta/rsi
